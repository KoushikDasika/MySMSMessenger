name: CI

on:
  pull_request:
  push:
    branches: [ main ]


jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
          working-directory: ./api

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager
        working-directory: ./api

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
          working-directory: ./api

      - name: Lint code for consistent style
        run: api/bin/rubocop -f github

  test:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: api
    services:
      mongo:
        image: mongo:8.0
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: my_sms_messenger_test
        options:
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh --quiet"
          --health-interval 30s
          --health-timeout 5s
          --health-retries 20
        ports:
          - 27017:27017

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run tests
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_TEST_KEY }}
          TEST_DATABASE_URL: mongodb://test:password@localhost:27017/my_sms_messenger_test?directConnection=true&authSource=admin&authMechanism=SCRAM-SHA-1
        run: bin/rails db:test:prepare && bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
